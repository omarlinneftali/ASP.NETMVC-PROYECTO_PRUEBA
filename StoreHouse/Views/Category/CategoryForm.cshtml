@using System.Runtime.Remoting.Messaging
@model StoreHouse.Models.Category

@{
    ViewBag.Title = "CategoryForm";
    var action = "SaveCategory";
    var controller = "Category";
    Layout = null;

}


<form action="@Url.Action(action,controller)" method="post" id="categoryForm" >



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", name="Name"} })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", name="Description" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    @Html.HiddenFor(model => model.CategoryID)

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" id="categorySubmit" />
        <input type="reset" value="Reset" class="btn btn-secondary" />


    </div>

</form>


    <script src="~/Scripts/project/category/categoryValidation.js"></script>












